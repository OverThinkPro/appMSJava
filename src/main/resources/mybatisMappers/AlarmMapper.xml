<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.webleader.appms.db.mapper.alarm.AlarmMapper">
	<!-- START BY HaoShaSha -->
	<!-- 普通的POJO与数据库映射Map -->
	<resultMap id="AlarmMap" type="Alarm">
		<id column="alarm_id" jdbcType="VARCHAR" property="alarmId" />
		<result column="alarm_start_time" jdbcType="TIMESTAMP" property="alarmStartTime" />
		<result column="alarm_inhandle" jdbcType="CHAR" property="alarmInhandle" />
		<result column="alarm_end_time" jdbcType="TIMESTAMP" property="alarmEndTime" />
		<result column="alarm_type_id" jdbcType="VARCHAR" property="alarmTypeId" />
		<result column="alarm_name" jdbcType="VARCHAR" property="alarmTypeName" />
	</resultMap>

	<!-- 列名 -->
	<sql id="Alarm_Column_List">
		alarm_id, alarm_start_time, alarm_inhandle, alarm_end_time, alarm_type_id
	</sql>
	
	<!-- 查询语句开始 -->
	<!-- 主键查询报警信息 -->
	<select id="selectByPrimaryKey" parameterType="String" resultMap="AlarmMap">
		SELECT alarm_id, alarm_start_time, alarm_inhandle, alarm_end_time, alarm.alarm_type_id,alarm_name
		FROM t_base_alarm_info alarm, t_base_alarm_sound_setting alarm_sound
		WHERE alarm_id = #{alarmId} 
		AND alarm.alarm_type_id = alarm_sound.alarm_type_id
	</select>
	
	<!-- 实时统计未被处理的各个类型的报警信息的数量 -->
	<select id="countRealAlarmType" resultType="Map">
		<!-- SELECT count(alarm_id) total,alarm_type_id,alarm_name
		FROM	
			(SELECT alarm_sound.alarm_type_id, alarm_name,alarm_id
			 FROM t_base_alarm_sound_setting alarm_sound
			 LEFT OUTER JOIN
				(SELECT <include refid="Alarm_Column_List" />
				 FROM t_base_alarm_info
				 WHERE alarm_inhandle='0'
				)alarm
			 ON alarm.alarm_type_id=alarm_sound.alarm_type_id) alarm_detail
		GROUP BY alarm_type_id,alarm_name
		ORDER BY alarm_type_id -->

		SELECT count(alarm_id) total,alarm_type_id,alarm_name, alarm_detail.alarm_file
		FROM	
			(SELECT alarm_sound.alarm_type_id, alarm_name,alarm_id, alarm_file
			 FROM t_base_alarm_sound_setting alarm_sound
			 LEFT OUTER JOIN
				(SELECT alarm_id, alarm_start_time, alarm_inhandle, alarm_end_time, alarm_type_id
				 FROM t_base_alarm_info
				 WHERE alarm_inhandle='0'
				)alarm
			 ON alarm.alarm_type_id=alarm_sound.alarm_type_id) alarm_detail
		GROUP BY alarm_type_id,alarm_name, alarm_file
		ORDER BY alarm_type_id
	</select>
	
	<!-- 插入一条报警信息 -->
	<insert id="insertAlarmInfo" parameterType="Map">
	    insert into t_base_alarm_info (alarm_id, alarm_start_time, alarm_inhandle, 
	      alarm_type_id, alarm_end_time)
	    values (#{alarmId,jdbcType=VARCHAR}, #{alarmStartTime,jdbcType=TIMESTAMP}, #{alarmInhandle,jdbcType=CHAR}, 
	      #{alarmTypeId,jdbcType=VARCHAR}, #{alarmEndTime,jdbcType=TIMESTAMP})
  	</insert>
	
	<!-- 删除语句开始 -->
	<!-- 根据条件删除报警信息or清空表 -->
	<delete id="deleteByCondition" parameterType="Map">
		DELETE FROM t_base_alarm_info
		<where>
			<if test="alarmInhandle != null">
				alarm_inhandle=#{alarm_inhandle}
			</if>
			<if test="alarmId!=null">
				AND alarm_id = #{alarmId}
			</if>
			<if test="alarmStartTime!=null">
				AND alarm_start_time &gt; #{alarmStartTime}
			</if>
			<if test="alarmEndTime!=null">
				AND alarm_end_time &lt; #{alarmEndTime}
			</if>
		</where>
	</delete>

	<!-- 删除语句结束 -->
	<!-- 修改语句开始 -->
	<!-- 更新报警处理结果 -->
	<update id="updateByPrimaryKeySelective" parameterType="Map">
		UPDATE t_base_alarm_info
		<set>
			<if test="alarmInhandle != null">
				alarm_inhandle = #{alarmInhandle},
			</if>
			<if test="alarmEndTime!=null">
				alarm_end_time = #{alarmEndTime},
			</if>
		</set>
		WHERE alarm_id = #{alarmId}
	</update>
	
	<!-- 修改语句结束 -->
	<!-- END BY HaoShaSha -->
</mapper>